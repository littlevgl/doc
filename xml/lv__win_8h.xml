<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__win_8h" kind="file" language="C++">
    <compoundname>lv_win.h</compoundname>
    <innerclass refid="structlv__win__ext__t" prot="public">lv_win_ext_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28e" prot="public" static="no">
        <name>@115</name>
        <enumvalue id="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea1ab16399b4bd879e6fcc1d83ed880d36" prot="public">
          <name>LV_WIN_PART_BG</name>
          <initializer>= LV_OBJ_PART_MAIN</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window object background style. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea6178e94c157f1e21065c1e2aa1746d74" prot="public">
          <name>_LV_WIN_PART_VIRTUAL_LAST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28eaf47e96342cd10440c8410e1f4136db40" prot="public">
          <name>LV_WIN_PART_HEADER</name>
          <initializer>= _LV_OBJ_PART_REAL_LAST</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window titlebar background style. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea22d0c6d44a5544c10ffc4eff14b279d6" prot="public">
          <name>LV_WIN_PART_CONTENT_SCROLLABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window content style. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea541ddf50479dfb66af51be2356500dd3" prot="public">
          <name>LV_WIN_PART_SCROLLBAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window scrollbar style. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea38fcbc976ef1846d27108291995acb45" prot="public">
          <name>_LV_WIN_PART_REAL_LAST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Window parts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="63" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" bodystart="63" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__win_8h_1a6c99d2cf67b1ec2811c0c7c807de99bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_win_create</definition>
        <argsstring>(lv_obj_t *par, const lv_obj_t *copy)</argsstring>
        <name>lv_win_create</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a window objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object, it will be the parent of the new window </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object, if not NULL then the new object will be copied from it </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the created window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1adeaf635070a10a907d3c493ac77293cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_clean</definition>
        <argsstring>(lv_obj_t *win)</argsstring>
        <name>lv_win_clean</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete all children of the scrl object, without deleting scrl child. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a82a3bcef851d3bfb361da252651174e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_win_add_btn_right</definition>
        <argsstring>(lv_obj_t *win, const void *img_src)</argsstring>
        <name>lv_win_add_btn_right</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>img_src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add control button on the right side of the window header <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_src</parametername>
</parameternamelist>
<parameterdescription>
<para>an image source (&apos;lv_img_t&apos; variable, path to file or a symbol) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the created button object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1aca84ac59f789690d49142a3691f7eb55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_win_add_btn_left</definition>
        <argsstring>(lv_obj_t *win, const void *img_src)</argsstring>
        <name>lv_win_add_btn_left</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>img_src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add control button on the left side of the window header <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_src</parametername>
</parameternamelist>
<parameterdescription>
<para>an image source (&apos;lv_img_t&apos; variable, path to file or a symbol) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the created button object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a7bd59c7cac7b5e5b3f85289aa5c0f92d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_close_event_cb</definition>
        <argsstring>(lv_obj_t *btn, lv_event_t event)</argsstring>
        <name>lv_win_close_event_cb</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btn</declname>
        </param>
        <param>
          <type><ref refid="lv__obj_8h_1a81567353752c588831ed89a3b15b4ca0" kindref="member">lv_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Can be assigned to a window control button to close the window <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the control button on the widows header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>the event type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a33972aaa3a9e2d13391450ae9b62baf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_set_title</definition>
        <argsstring>(lv_obj_t *win, const char *title)</argsstring>
        <name>lv_win_set_title</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the title of a window <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>string of the new title </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1af8b03393ed71263b128954edd5654c68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_set_header_height</definition>
        <argsstring>(lv_obj_t *win, lv_coord_t size)</argsstring>
        <name>lv_win_set_header_height</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the control button size of a window <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>control button size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1ad7ee36b926bbd7144f8c53b77f55b4af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_set_btn_width</definition>
        <argsstring>(lv_obj_t *win, lv_coord_t width)</argsstring>
        <name>lv_win_set_btn_width</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the width of the control buttons on the header <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the control button. 0: to make them square automatically. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1adc1d86b6da47b92b58df0f7284a61332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_set_content_size</definition>
        <argsstring>(lv_obj_t *win, lv_coord_t w, lv_coord_t h)</argsstring>
        <name>lv_win_set_content_size</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the size of the content area. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>height (the window will be higher with the height of the header) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a4cc3defe1079a962ed0d0ec9406387bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_set_layout</definition>
        <argsstring>(lv_obj_t *win, lv_layout_t layout)</argsstring>
        <name>lv_win_set_layout</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>lv_layout_t</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the layout of the window <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>the layout from &apos;lv_layout_t&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a0455916bef82eb9e2d85f36cf6fd3037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_set_scrollbar_mode</definition>
        <argsstring>(lv_obj_t *win, lv_scrollbar_mode_t sb_mode)</argsstring>
        <name>lv_win_set_scrollbar_mode</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>lv_scrollbar_mode_t</type>
          <declname>sb_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scroll bar mode of a window <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sb_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the new scroll bar mode from &apos;lv_scrollbar_mode_t&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1abc36995c57db3f0e1f44d67e2d82588f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_set_anim_time</definition>
        <argsstring>(lv_obj_t *win, uint16_t anim_time)</argsstring>
        <name>lv_win_set_anim_time</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>anim_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set focus animation duration on <computeroutput><ref refid="lv__win_8h_1a8fe3ba84652bc9d1a921825a6daaf42d" kindref="member">lv_win_focus()</ref></computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anim_time</parametername>
</parameternamelist>
<parameterdescription>
<para>duration of animation [ms] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a1832dbf704d18e313e7baeb7d4a499d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_set_drag</definition>
        <argsstring>(lv_obj_t *win, bool en)</argsstring>
        <name>lv_win_set_drag</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set drag status of a window. If set to &apos;true&apos; window can be dragged like on a PC. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>whether dragging is enabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a63ae8d1cb07d76cd7848f3dbb7ce970b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* lv_win_get_title</definition>
        <argsstring>(const lv_obj_t *win)</argsstring>
        <name>lv_win_get_title</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the title of a window <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>title string of the window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a756c0c6270445d3579c0e53d28a0a7f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_win_get_content</definition>
        <argsstring>(const lv_obj_t *win)</argsstring>
        <name>lv_win_get_content</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the content holder object of window (<computeroutput>lv_page</computeroutput>) to allow additional customization <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the Page object where the window&apos;s content is </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1afbd6d8f2a9bfa6b23618b84bed481019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_win_get_header_height</definition>
        <argsstring>(const lv_obj_t *win)</argsstring>
        <name>lv_win_get_header_height</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the header height <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>header height </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a4ca766ac2c2d55d77763086eff34d5b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_win_get_btn_width</definition>
        <argsstring>(lv_obj_t *win)</argsstring>
        <name>lv_win_get_btn_width</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the width of the control buttons on the header <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>width of the control button. 0: square. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a9acd59636b3ccdda357ba6f1f6ef2591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_win_get_from_btn</definition>
        <argsstring>(const lv_obj_t *ctrl_btn)</argsstring>
        <name>lv_win_get_from_btn</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>ctrl_btn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the pointer of a widow from one of its control button. It is useful in the action of the control buttons where only button is known. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctrl_btn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a control button of a window </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the window of &apos;ctrl_btn&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a0d020b5aaeba7fe13e8064e1b70da5fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_layout_t</type>
        <definition>lv_layout_t lv_win_get_layout</definition>
        <argsstring>(lv_obj_t *win)</argsstring>
        <name>lv_win_get_layout</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the layout of a window <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the layout of the window (from &apos;lv_layout_t&apos;) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a1724b1322cc1763211700474679a1308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_scrollbar_mode_t</type>
        <definition>lv_scrollbar_mode_t lv_win_get_sb_mode</definition>
        <argsstring>(lv_obj_t *win)</argsstring>
        <name>lv_win_get_sb_mode</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scroll bar mode of a window <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the scroll bar mode of the window (from &apos;lv_sb_mode_t&apos;) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a71eccd7f20f1dad0d3ceb67b421593f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t lv_win_get_anim_time</definition>
        <argsstring>(const lv_obj_t *win)</argsstring>
        <name>lv_win_get_anim_time</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get focus animation duration <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>duration of animation [ms] </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1ad90ee7df1fe0eca020d2e70ccf10adad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_win_get_width</definition>
        <argsstring>(lv_obj_t *win)</argsstring>
        <name>lv_win_get_width</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get width of the content area (page scrollable) of the window <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the width of the content area </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a901b8af3ac0da7c4972be96110c795cb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lv_win_get_drag</definition>
        <argsstring>(const lv_obj_t *win)</argsstring>
        <name>lv_win_get_drag</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get drag status of a window. If set to &apos;true&apos; window can be dragged like on a PC. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether window is draggable </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="252" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a8fe3ba84652bc9d1a921825a6daaf42d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_win_focus</definition>
        <argsstring>(lv_obj_t *win, lv_obj_t *obj, lv_anim_enable_t anim_en)</argsstring>
        <name>lv_win_focus</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_anim_enable_t</type>
          <declname>anim_en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Focus on an object. It ensures that the object will be visible in the window. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object to focus (must be in the window) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anim_en</parametername>
</parameternamelist>
<parameterdescription>
<para>LV_ANIM_ON focus with an animation; LV_ANIM_OFF focus without animation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1ab5a15992d601a93592f00dcf18c2df60" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lv_win_scroll_hor</definition>
        <argsstring>(lv_obj_t *win, lv_coord_t dist)</argsstring>
        <name>lv_win_scroll_hor</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>dist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scroll the window horizontally <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist</parametername>
</parameternamelist>
<parameterdescription>
<para>the distance to scroll (&lt; 0: scroll right; &gt; 0 scroll left) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="274" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" bodystart="274" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="lv__win_8h_1a70f2b494d39eb959079f3e0e9793c324" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lv_win_scroll_ver</definition>
        <argsstring>(lv_obj_t *win, lv_coord_t dist)</argsstring>
        <name>lv_win_scroll_ver</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>dist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scroll the window vertically <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a window object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist</parametername>
</parameternamelist>
<parameterdescription>
<para>the distance to scroll (&lt; 0: scroll down; &gt; 0 scroll up) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" line="284" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h" bodystart="284" bodyend="288"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_WIN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_WIN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_WIN<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*Testing<sp/>of<sp/>dependencies*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_BTN<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;lv_win:<sp/>lv_btn<sp/>is<sp/>required.<sp/>Enable<sp/>it<sp/>in<sp/>lv_conf.h<sp/>(LV_USE_BTN<sp/><sp/>1)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_LABEL<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;lv_win:<sp/>lv_label<sp/>is<sp/>required.<sp/>Enable<sp/>it<sp/>in<sp/>lv_conf.h<sp/>(LV_USE_LABEL<sp/><sp/>1)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_IMG<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;lv_win:<sp/>lv_img<sp/>is<sp/>required.<sp/>Enable<sp/>it<sp/>in<sp/>lv_conf.h<sp/>(LV_USE_IMG<sp/><sp/>1)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_PAGE<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;lv_win:<sp/>lv_page<sp/>is<sp/>required.<sp/>Enable<sp/>it<sp/>in<sp/>lv_conf.h<sp/>(LV_USE_PAGE<sp/><sp/>1)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_core/lv_obj.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__cont_8h" kindref="compound">lv_cont.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__btn_8h" kindref="compound">lv_btn.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__label_8h" kindref="compound">lv_label.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__img_8h" kindref="compound">lv_img.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__page_8h" kindref="compound">lv_page.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*Data<sp/>of<sp/>window*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structlv__win__ext__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Ext.<sp/>of<sp/>ancestor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*New<sp/>data<sp/>for<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>page;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Pointer<sp/>to<sp/>a<sp/>page<sp/>which<sp/>holds<sp/>the<sp/>content*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>header;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Pointer<sp/>to<sp/>the<sp/>header<sp/>container<sp/>of<sp/>the<sp/>window*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>title_txt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Pointer<sp/>to<sp/>the<sp/>title<sp/>label<sp/>of<sp/>the<sp/>window*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>btn_w;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Width<sp/>of<sp/>the<sp/>control<sp/>buttons*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/><ref refid="structlv__win__ext__t" kindref="compound">lv_win_ext_t</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64" refid="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea1ab16399b4bd879e6fcc1d83ed880d36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea1ab16399b4bd879e6fcc1d83ed880d36" kindref="member">LV_WIN_PART_BG</ref><sp/>=<sp/>LV_OBJ_PART_MAIN,<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>_LV_WIN_PART_VIRTUAL_LAST,</highlight></codeline>
<codeline lineno="66" refid="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28eaf47e96342cd10440c8410e1f4136db40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28eaf47e96342cd10440c8410e1f4136db40" kindref="member">LV_WIN_PART_HEADER</ref><sp/>=<sp/>_LV_OBJ_PART_REAL_LAST,<sp/></highlight></codeline>
<codeline lineno="67" refid="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea22d0c6d44a5544c10ffc4eff14b279d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea22d0c6d44a5544c10ffc4eff14b279d6" kindref="member">LV_WIN_PART_CONTENT_SCROLLABLE</ref>,<sp/></highlight></codeline>
<codeline lineno="68" refid="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea541ddf50479dfb66af51be2356500dd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__win_8h_1a2f1398dba5e4a5616b83437528bdb28ea541ddf50479dfb66af51be2356500dd3" kindref="member">LV_WIN_PART_SCROLLBAR</ref>,<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>_LV_WIN_PART_REAL_LAST</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__win_8h_1a6c99d2cf67b1ec2811c0c7c807de99bc" kindref="member">lv_win_create</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>copy);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1adeaf635070a10a907d3c493ac77293cf" kindref="member">lv_win_clean</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*======================</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>Add/remove<sp/>functions</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*=====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__win_8h_1a82a3bcef851d3bfb361da252651174e4" kindref="member">lv_win_add_btn_right</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>img_src);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__win_8h_1aca84ac59f789690d49142a3691f7eb55" kindref="member">lv_win_add_btn_left</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>img_src);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>Setter<sp/>functions</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1a7bd59c7cac7b5e5b3f85289aa5c0f92d" kindref="member">lv_win_close_event_cb</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btn,<sp/><ref refid="lv__obj_8h_1a81567353752c588831ed89a3b15b4ca0" kindref="member">lv_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1a33972aaa3a9e2d13391450ae9b62baf1" kindref="member">lv_win_set_title</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>title);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1af8b03393ed71263b128954edd5654c68" kindref="member">lv_win_set_header_height</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/>lv_coord_t<sp/>size);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1ad7ee36b926bbd7144f8c53b77f55b4af" kindref="member">lv_win_set_btn_width</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/>lv_coord_t<sp/>width);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1adc1d86b6da47b92b58df0f7284a61332" kindref="member">lv_win_set_content_size</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/>lv_coord_t<sp/>w,<sp/>lv_coord_t<sp/>h);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1a4cc3defe1079a962ed0d0ec9406387bd" kindref="member">lv_win_set_layout</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/>lv_layout_t<sp/>layout);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1a0455916bef82eb9e2d85f36cf6fd3037" kindref="member">lv_win_set_scrollbar_mode</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/>lv_scrollbar_mode_t<sp/>sb_mode);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1abc36995c57db3f0e1f44d67e2d82588f" kindref="member">lv_win_set_anim_time</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/>uint16_t<sp/>anim_time);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1a1832dbf704d18e313e7baeb7d4a499d4" kindref="member">lv_win_set_drag</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>Getter<sp/>functions</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lv__win_8h_1a63ae8d1cb07d76cd7848f3dbb7ce970b" kindref="member">lv_win_get_title</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__win_8h_1a756c0c6270445d3579c0e53d28a0a7f7" kindref="member">lv_win_get_content</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__win_8h_1afbd6d8f2a9bfa6b23618b84bed481019" kindref="member">lv_win_get_header_height</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__win_8h_1a4ca766ac2c2d55d77763086eff34d5b0" kindref="member">lv_win_get_btn_width</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__win_8h_1a9acd59636b3ccdda357ba6f1f6ef2591" kindref="member">lv_win_get_from_btn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>ctrl_btn);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">lv_layout_t<sp/><ref refid="lv__win_8h_1a0d020b5aaeba7fe13e8064e1b70da5fb" kindref="member">lv_win_get_layout</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">lv_scrollbar_mode_t<sp/><ref refid="lv__win_8h_1a1724b1322cc1763211700474679a1308" kindref="member">lv_win_get_sb_mode</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">uint16_t<sp/><ref refid="lv__win_8h_1a71eccd7f20f1dad0d3ceb67b421593f2" kindref="member">lv_win_get_anim_time</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__win_8h_1ad90ee7df1fe0eca020d2e70ccf10adad" kindref="member">lv_win_get_width</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lv_win_get_drag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a1d3e216562fa5dc093cf1f368566470b" kindref="member">lv_obj_get_drag</ref>(win);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/>Other<sp/>functions</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__win_8h_1a8fe3ba84652bc9d1a921825a6daaf42d" kindref="member">lv_win_focus</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_anim_enable_t<sp/>anim_en);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_win_scroll_hor(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/>lv_coord_t<sp/>dist)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__win__ext__t" kindref="compound">lv_win_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/>(<ref refid="structlv__win__ext__t" kindref="compound">lv_win_ext_t</ref><sp/>*)<ref refid="lv__obj_8h_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(win);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__page_8h_1aad308298e31d2d908b328fc33f7c823b" kindref="member">lv_page_scroll_hor</ref>(ext-&gt;page,<sp/>dist);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_win_scroll_ver(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>win,<sp/>lv_coord_t<sp/>dist)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__win__ext__t" kindref="compound">lv_win_ext_t</ref><sp/>*<sp/>ext<sp/>=<sp/>(<ref refid="structlv__win__ext__t" kindref="compound">lv_win_ext_t</ref><sp/>*)<ref refid="lv__obj_8h_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(win);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__page_8h_1a173c63db625e52386caccccf6994c29f" kindref="member">lv_page_scroll_ver</ref>(ext-&gt;page,<sp/>dist);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_USE_WIN*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_WIN_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_widgets/lv_win.h"/>
  </compounddef>
</doxygen>
